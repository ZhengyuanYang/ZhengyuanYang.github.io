<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Feature Selection: Statistical Method</title>
    <link href="/2022/02/09/feature-selection-stats-method/"/>
    <url>/2022/02/09/feature-selection-stats-method/</url>
    
    <content type="html"><![CDATA[<h1 id="feature-selection">Feature Selection</h1><h2 id="filter">1. Filter</h2><p>Evaluate features on divergence and correlation. set one or more thresholds and select the feature.</p><p><strong>Pro</strong>: fast, scalable, independent of the model</p><p><strong>Con</strong>: ignore the dependence of features</p><h3 id="variance">1.1 Variance</h3><ol type="1"><li>calculate the variance(not STD) of each feature</li><li>set a threshold, select all features whose variance bigger than the threshold</li></ol><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> VarianceThreshold<br><span class="hljs-comment">#threshold 是方差的阈值</span><br><span class="hljs-comment">#返回选择后的特征</span><br>data_1 = VarianceThreshold(threshold=<span class="hljs-number">0.25</span>).fit_transform(data_0)<br></code></pre></td></tr></table></figure><h3 id="correlation">1.2 Correlation</h3><h4 id="pearson-r">1.2.1 Pearson R</h4><ol type="1"><li>calculate the correlation value between each feature and the target</li><li>select the features with top K biggest correlation value</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest<br><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> pearsonr<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_all_pscore</span>(<span class="hljs-params">x,y</span>):</span><br>    k = np.zeros([<span class="hljs-number">4</span>,<span class="hljs-number">2</span>])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,x.shape[<span class="hljs-number">1</span>]):<br>        temp = pearsonr(x[:,i],y[:,<span class="hljs-number">0</span>])<br>        k[i,:] = np.array(temp)<br>    <span class="hljs-keyword">return</span> [k.T[<span class="hljs-number">0</span>],k.T[<span class="hljs-number">1</span>]]<br><span class="hljs-comment"># 下面的写法有问题理论上应该与上面的函数等价，实际上在调用np.array时，会把最内层的pearsonr系数值变成一个数组对象，导致SelectKBest无法</span><br><span class="hljs-comment"># 遍历，需要用astype把第一列转化为float，但这样很难封装进lambda函数里，不如不用，写这个的人铁nt，害我研究一个多小时</span><br><span class="hljs-comment"># get_all_pscore =  lambda X,Y:np.array(list(map(lambda x:pearsonr(x,Y),X.T))).T</span><br><br><span class="hljs-comment">#第一个参数为一个callable()，该函数以feature，target为输入，输出可以是两种：</span><br><span class="hljs-comment"># 1. 一对数组pearsonr系数-p值（可以是tuple中两个数组，也可以是ndarray，总之第一个维度须为2</span><br><span class="hljs-comment"># 2. 一个单一的数组（只有相关系数）</span><br><span class="hljs-comment"># 第二个参数k，代表选择前k个</span><br>data_1 = SelectKBest(get_all_pscore(),k=<span class="hljs-number">2</span>).fit_transform(data_0,target_0)<br></code></pre></td></tr></table></figure><p>* <em>question: what if I have multiple output feature? how to decide which one to drop?</em></p><p>* <em>Pearson R is a coefficient between [-1,1], and negative value means negative correlation, so I believe I should use abs when applying Pearson R</em></p><p>* <em>Pearson R is a method to find out the linear correlation between two variables, if two variables are non-linearly correlated, then even if the Pearson R is 0, we cannot say they are not correlated. In such case, we should use other correlation method, like distance correlation to make evaluation</em></p><h3 id="hypothesis-testing">1.3 Hypothesis Testing</h3><h4 id="chi-squared-test">1.3.1 Chi-Squared Test</h4><p>chi-squared test is a <strong>supervised</strong> hypothesis testing method to calculate the probability that 2 variables are correlated</p><ol type="1"><li><p>According to the observations, make the frequency table</p></li><li><p>calculate the row total and the column total</p></li><li><p>calculate the expectations for each cell by <span class="math inline">\(\frac{R_i*C_j}{total}\)</span> (<span class="math inline">\(\frac{125*310}{600} = 65\)</span>,etc.)</p></li><li><p>the chi2 of each cell and the total chi2 are given by <span class="math display">\[\chi_{i,j}^2 = \frac{(O_{i,j} - E_{i,j})^2}{E_{i,j}}\\\chi^2 = \sum_{i,j}^{r,c}\chi_{i,j}^2\]</span></p></li><li><p>calculate the degree of freedom, <span class="math inline">\(k=(r-1)(c-1)\)</span></p><table><thead><tr class="header"><th>movie type</th><th>High POPULARITY</th><th>low POPULARITY</th><th>Row total</th></tr></thead><tbody><tr class="odd"><td>type1</td><td>50(65)</td><td>75(60)</td><td>125</td></tr><tr class="even"><td>type2</td><td>125(155)</td><td>175(145)</td><td>300</td></tr><tr class="odd"><td>type3</td><td>...</td><td>...</td><td>...</td></tr><tr class="even"><td>type4</td><td>...</td><td>...</td><td>...</td></tr><tr class="odd"><td>column total</td><td>310</td><td>290</td><td>600</td></tr></tbody></table></li><li><p>check the significance table of chi distribution to find the value of the random variable under given k and <span class="math inline">\(\alpha\)</span></p></li><li><p>compare the <span class="math inline">\(\chi^2\)</span>z with the rejection area, if <span class="math inline">\(\chi^2\)</span> &gt; the found value(which means p value is smaller than <span class="math inline">\(\alpha\)</span>), then reject the null hypothesis</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectKBest, chi2<br>X, y = data_0,target_0<br>X_new = SelectKBest(chi2, k=<span class="hljs-number">2</span>).fit_transform(X, y)<br></code></pre></td></tr></table></figure><h3 id="mutual-information">1.4 Mutual Information</h3><h4 id="entropy-and-kl-divergence">1.41 Entropy and KL Divergence</h4><p>Suppose we have a variable X, the information amount of x is give by <span class="math display">\[I(X) =-\log_2p(X) =\int-\log_2p(x_i)\]</span> We want to know the average information amount X gives, so we define <strong>Entropy </strong> as: <span class="math display">\[H(X) = -\int p(X)\log_2p(X)dX\]</span> if X is continuous, or <span class="math display">\[H(X) = -\sum_i^N p(x_i)\log_2p(x_i)\]</span> if X is discrete.</p><p>Suppose we have an approximated distribution of X, p and q, and we want to know how this two distributions are similar , we can calculate the relative Entropy, or <strong>KL Divergence</strong> between two random <span class="math display">\[D_{KL}(p||q) = \sum_{i=1}^Np(xi)\log(\frac{p(x_i)}{q(x_i)})\]</span></p><h4 id="mutual-information-1">1.4.2 Mutual Information</h4><p>The mutual information is a measurement for the dependency between two variables, it is given by the KL divergence between the joint distribution of X and Y , which is p(X,Y), and the product of p(X) and p(Y). <span class="math display">\[MI(X,Y) =D_{KL}(p(x,y)||p(x)p(y)) =  \sum_y \sum_x p(x,y) \log \frac{p(x,y)}{p(x)p(y)}\]</span> If MI is big, the two variable are strongly related, if MI = 0, which means p(x,y) = p(x)p(y), than these two variables are independent</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> mutual_info_score<br>MI_matrix = np.zeros([data_and_target.shape[<span class="hljs-number">1</span>],data_and_target.shape[<span class="hljs-number">1</span>]])<br><span class="hljs-comment"># calculate the MI matrix between each two feature</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,data_and_target.shape[<span class="hljs-number">1</span>]):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,data_and_target.shape[<span class="hljs-number">1</span>]):<br>        MI_matrix[i,j] = mutual_info_score(data_and_target[i+<span class="hljs-number">1</span>],data_and_target[j+<span class="hljs-number">1</span>])<br>df = pd.DataFrame(MI_matrix,columns=data_and_target.columns,index=data_and_target.columns)<br><span class="hljs-built_in">print</span>(df)<br></code></pre></td></tr></table></figure><h2 id="wrapper">2.Wrapper</h2><p>Through the Evaluation(like the MSE, AUC) of the model, add or drop some feature each trail.</p><p><strong>Pro</strong>: accurate</p><p><strong>Con</strong>: time-consuming</p><h4 id="recursive-feature-elimination">2.1 Recursive Feature Elimination</h4><p>Construct models, select the best features(or drop the worst feature) by the performance of the model, and than repeat this process on the rest of the features.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> RFE<br><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> RFECV<br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> StratifiedKFold<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestClassifier<br><span class="hljs-comment"># REF works for all models that have a weight on features</span><br><span class="hljs-comment"># step: the number(or precentage) of feature to eliminate in each iteration</span><br>estimator = RandomForestClassifier(n_estimators=<span class="hljs-number">100</span>)<br>selector = RFE(estimator= estimator, n_features_to_select= <span class="hljs-number">3</span>,step=<span class="hljs-number">1</span>)<br>data_transformed = selector.fit_transform(data_0,target_0)<br><br><span class="hljs-comment"># REFCV</span><br><span class="hljs-comment"># REF with cross validation</span><br>cv = StratifiedKFold(n_splits=<span class="hljs-number">5</span>)<br>selector = RFECV(estimator= estimator, min_features_to_select= <span class="hljs-number">3</span>, cv=cv, step=<span class="hljs-number">1</span>)<br>data_transformed = selector.fit_transform(data_0,target_0)<br></code></pre></td></tr></table></figure><h2 id="embedded">3. Embedded</h2><p>Some models, like Lasso, Ridge, and Random Forest has method embedded in the model to evaluate features. Train these model first and than make selection of feature.</p><p><strong>Pro</strong>: fast, easy to apply</p><p><strong>Con</strong>: ignore the dependence of features</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.feature_selection <span class="hljs-keyword">import</span> SelectFromModel<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestClassifier<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> LinearSVC<br><br>estimator = RandomForestClassifier(n_estimators=<span class="hljs-number">100</span>)<br><span class="hljs-comment"># threshold:</span><br><span class="hljs-comment"># threshold of the feature importance to drop</span><br><span class="hljs-comment"># if you apply l1 in your model(or use lasso), the threshold is 1e-5 by default</span><br><span class="hljs-comment"># otherwise, the threshold is mean by default, which means features with a importance less than mean importance will</span><br><span class="hljs-comment"># all by dropped</span><br>selecor = SelectFromModel(estimator,threshold=<span class="hljs-number">0.03</span>)<br>data_transformed = selecor.fit_transform(data_0,target_0)<br><br><br>estimator = LinearSVC(C=<span class="hljs-number">0.01</span>,penalty=<span class="hljs-string">&#x27;l1&#x27;</span>,dual=<span class="hljs-literal">False</span>).fit(data_0,target_0)<br><span class="hljs-comment"># prefit: whether the model given to the selector is already fit</span><br>selecor = SelectFromModel(estimator,threshold=<span class="hljs-number">0.03</span>,prefit=<span class="hljs-literal">True</span>)<br>data_transformed = selecor.transform(data_0)<br><span class="hljs-built_in">print</span>(data_transformed)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Machine Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Feature Engineering</tag>
      
      <tag>Feature Selection</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Statistics for Data Science</title>
    <link href="/2022/02/09/statistics-for-ds/"/>
    <url>/2022/02/09/statistics-for-ds/</url>
    
    <content type="html"><![CDATA[<h1 id="statistics-for-data-science">Statistics for Data Science</h1><h2 id="term-in-statistics">Term in statistics</h2><p><strong>statistics</strong></p><p>Statistics gather, describe and analyze sample data in a numerical way to understand the whole date</p><p><strong>target population</strong></p><p>A particular group of interest</p><p><strong>sample population</strong></p><p>A group which the sample is taken</p><p><strong>sample frame</strong></p><p>A physical list of all members of the sampled population</p><p><strong>sample</strong></p><p>A subset of the sample population from which data are collected</p><p>Ideally, sample should be representative to sample population, the sample population should be the same or representative to target population.</p><p><img src="/2022/02/09/statistics-for-ds/1.PNG" alt style="zoom:80%;"></p><p><strong>census</strong></p><p>A study on every member in the target population</p><p><strong>variable</strong></p><p>A value or characteristic that changes among members of the population</p><p><strong>data </strong></p><p>the actual counts, measurements or observation about the variables that you markdown with yout samples</p><p><strong>parameter</strong></p><p>A numerical description of a population characteristic (like mean of a variable's data)</p><p><strong>sample statistics</strong></p><p>A numerical description of a sample characteristic</p><h2 id="data-classification">Data Classification</h2><h3 id="categorical-numeric">Categorical &amp; Numeric</h3><p><strong>Categorical</strong>: consist of labels or description of traits. It's meaning less to apply quantitative calculation on it</p><p><strong>Numeric</strong>: consist of counts and measurement, it have meanings when you apply quantitative calculations</p><h3 id="discrete-continuous">Discrete &amp; Continuous</h3><p><strong>Discrete</strong>: numeric data that can take only particular values(counts, rate stars)</p><p><strong>Continuous</strong>: numeric data that can take any values in an interval</p><p><img src="/2022/02/09/statistics-for-ds/3.PNG"></p><h3 id="noir">NOIR</h3><p><strong>Nominal level data</strong>: description of categorical data that order do not matters</p><p><strong>Ordinal level data</strong>: categorical data that have a meaningful order(still not meaningful to add or divide)</p><p><strong>Interval level data</strong>: numeric data that can be arranged in a meaningful order, and the different between data entries are meaningful(timestamp, shoe size, temperature degree)</p><p><strong>Ratio level data</strong>: Interval data where zero indicates absence of something(like body height, 0 inch body high do not have a actual meaning, it means the data are not collected, where 0 degree do have an actual meaning, so it is not a ratio data.) As ratio data cannot participate calculation if data is not included, it must be non-zero in a calculation, thus it can divide other numeric data, that is why it is called ratio data</p><p><img src="/2022/02/09/statistics-for-ds/2.PNG"></p><h2 id="the-process-of-a-statistics-study">The Process of a Statistics Study</h2><h3 id="general-process-of-conducting-a-statistic-study">General process of conducting a statistic study</h3><ol type="1"><li>Determine the design of the study<ol type="1"><li>state the question to be studied</li><li>determine the population and variables</li><li>determine the sampling method</li></ol></li><li>Collect data<ol type="1"><li>An <a href="#observational-study">observational study</a> observe data that already exist</li><li>An experiment generates data to help find cause-and-effect relationship</li></ol></li><li>Organize the data</li><li>Analyze the data</li></ol><h3 id="methods-of-sampling">Methods of sampling:</h3><p><strong>simple random sample</strong></p><p>Every sample in the sample population has a equal chance to be selected</p><p><strong>stratified sample</strong></p><p>The population is divided into subgroups called strata. The grouping variable should be correlated with(or is) the variable we care about. For example, we want to find the relationship between tree's age and apples's color, but in our 100 sample, 80 observations have a red apple, 20 have a green apple. If we randomly 10 sample, we might select a sample with all red apple. In this case, we cannot analyze the relationship between age and color since the sample indicates trees of any ages grow apple of same color.</p><p>By applying stratified, we separate the observations into two groups according to apple color, and we select same percentage of observations from both group(8 from red group and 2 from blue group) and then we analyze cause-and-effect relationship</p><p><strong>Cluster Sample</strong></p><p>The population is divided into subgroups called clusters. The grouping variable should be correlated with the variable we care about.</p><p><strong>Systematic sample</strong></p><p>select every <span class="math inline">\(n^{th}\)</span> of the population</p><p><strong>Convenient sample</strong></p><p>sample on a personal bias, very unethical method to use</p><h3 id="observational-study">Observational Study</h3><p><strong>cross-sectional study</strong>: data are collected towards different members in a single point in time</p><p><strong>longitudinal study</strong>: data are gathered by following a particular group over a period of time</p><h3 id="experiment">Experiment</h3><p><strong>treatment</strong>: a condition applied to a group of subjects in an experiment</p><p><strong>subjects</strong>: people or thing to be studied in a group</p><p><strong>response variable</strong>: the variable in an experiment that responds to the treatment</p><p><strong>explanatory variable</strong>: the variable in an experiment that causes the change in the response variable</p><p><strong>control group</strong>: a group in the experiment that has no treatment applied</p><p><strong>treatment group</strong>: a group in the experiment with a treatment applied</p><p><strong>confounding variable</strong>: unmeasured factors other than the treatment that cause an effect on the subjects of an experiment</p><p><strong>single-blind experiment</strong>: subjects do not know which group they are in, but the people interacting(measurer) with the subjects know</p><p><strong>double-blind experiment</strong>: neither the subjects not the measurer know which group each subject belongs</p><p><strong>placebo</strong>: a substance or method to make subjects believe all subjects in both groups receive same treatment(in order to exclude personal factor)</p><p><strong>Institutional Review Board</strong>: a group of people who review the experiment design to make sure no harm will come to subjects involved</p><p><strong>Informed consent</strong>: completely disclosing to participant the goals and procedures of a study and obtaining their agreement to participate</p><p>Three principles of experiment design:</p><ol type="1"><li>randomize the control and treatment group</li><li>control for the outside effects on the response variable</li><li>replicate the experiment a significant number of times to see meaningful patterns</li></ol>]]></content>
    
    
    <categories>
      
      <category>Statistics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Basic Statistics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB Guildline</title>
    <link href="/2022/02/06/MongoDB-Guildline/"/>
    <url>/2022/02/06/MongoDB-Guildline/</url>
    
    <content type="html"><![CDATA[<h1 id="mongodb">MongoDB</h1><h2 id="about-mongodb">About MongoDB</h2><p>MongoDB is a open- source NoSQL database stroing data in json like documents with schema.</p><p>mongoDB do not have concepts like join.</p><p>mongoDB provides APIs for most programing language</p><h2 id="three-ways-to-access-mongodb">Three ways to access MongoDB</h2><ol type="1"><li>Community server</li><li>VS extending</li><li>MongoDB Altas</li></ol><h2 id="concepts-in-mondodb">Concepts in MondoDB:</h2><p><strong>Document:</strong> a set of K-V pairs. Every document has a unique value via key "_id". Documents have dynamic schema, documents in same collection can have different schema. They. Can hold data of any types allowed by mongodb.</p><p><strong>Collection:</strong> a group of mongodb documents, similar to "tables in other database. Unlike tables, collections does nothave any schema definition, and it cannnot be join. Usually, documents with in a collection belonging to a particular subject.</p><p><strong>Database:</strong> A database is a container of collections of data</p><p><strong>Comparison between RDBMS and MongoDB</strong></p><table><colgroup><col style="width: 8%"><col style="width: 30%"><col style="width: 12%"><col style="width: 48%"></colgroup><thead><tr class="header"><th style="text-align: left;">RDBMS</th><th style="text-align: left;"></th><th></th><th></th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">Tables</td><td style="text-align: left;">stand for entity</td><td>Collections</td><td>A set of documents representing one object</td></tr><tr class="even"><td style="text-align: left;">rows</td><td style="text-align: left;">stand for an actual record</td><td>Documents</td><td>a json objects</td></tr><tr class="odd"><td style="text-align: left;">columns</td><td style="text-align: left;">stand for attributes</td><td>Fields</td><td>The first level of the schema</td></tr></tbody></table><h2 id="start-with-mongodb">Start with MongoDB</h2><ol type="1"><li><p>Build a sever(for Mac)</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">mongod --config /opt/homebrew/etc/mongod.conf<br></code></pre></td></tr></table></figure><p>This create a temp mongo server. If you close the session by ctrl+c, he connecttion would be terminated</p><p>Or you can use the command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew services start mongodb/brew/mongodb-community<br></code></pre></td></tr></table></figure><p>This create a back-support mongoDB server, you can still access to it after you close the terminal, to stop the back-support:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew services stop mongodb/brew/mongodb-community<br></code></pre></td></tr></table></figure></li><li><p>Start a connection</p><ol type="1"><li>After start the server, you can type <code>mongo</code> in bash to start a connection. Use <code>exit</code> to stop the connection</li><li>you can use mongodb compass to start a connection, this is a mongondb management UI</li><li>use Datagrip/Dataspell to build a connection</li></ol><p>Notes:</p><ul><li>The port for local host is always 27017</li><li>There's no default username and password</li></ul></li></ol><h2 id="data-types-in-mongodb">Data types in MongoDB</h2><p>Allowed data dytes in mongoDB include:</p><ul><li><p>BSON</p><p>​ A mongoDB data type, it's binary encoded json that can processed faster, it support some types(data, timestamp,object id) that are not supported by json</p></li><li><p>JSON</p></li><li><p>Integer</p></li><li><p>Boolean</p></li><li><p>Double</p></li><li><p>Arrays</p></li><li><p>Objects</p><p>​ Used to store embedded documents. If a documents A contains a K-V pair {"file":B}, where B is another document, the type of B in A's schema is Object</p></li><li><p>Null</p></li><li><p>Date</p></li><li><p>Timestemp</p></li><li><p>Object ID</p><p>​ ObjectIds are small, likely unique, fast to generate, and ordered. It's a usually used as a PK of a document. ObjectId values are 12 bytes in length, consisting of a 4-bytes timestamp value representiong the ObjectId's creation, a 5-bytes random value, a 3-byte incrementing value</p></li><li><p>Code</p><p>​ Like javascript code</p></li></ul><h2 id="create-and-drop-database">Create and Drop Database</h2><p>you can create databse by:</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran"><span class="hljs-keyword">use</span> &lt;database-<span class="hljs-keyword">name</span>&gt;<br></code></pre></td></tr></table></figure><p>It would select the DB, if not exists, it create the DB</p><p>Notes: The created databse will not be visible untill you insert any data into it</p><p>To drop the database:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">db.dropDatabase<span class="hljs-comment">()</span><br></code></pre></td></tr></table></figure><p>where <code>db</code> refer to the currently used database.</p><p>Before you drop the DB, makesure you select the DB first.</p><p>Some other commands related to create and drop</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-literal">show</span> databases -- list <span class="hljs-literal">all</span> visible DB<br>db -- <span class="hljs-literal">show</span> the <span class="hljs-literal">current</span> DB<br></code></pre></td></tr></table></figure><h2 id="create-and-drop-colletions">Create and drop colletions</h2><p>to create a collection in Database:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.create<span class="hljs-constructor">Collection(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-params">options</span>)</span><br></code></pre></td></tr></table></figure><p>to drop a collection:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">db</span>.collection_name.<span class="hljs-keyword">drop</span>()<br></code></pre></td></tr></table></figure><p>to show collections in current DB</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">show</span> collections<br></code></pre></td></tr></table></figure><h2 id="insert-documents">Insert documents</h2><p>to create one documents:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>insert<span class="hljs-constructor">One(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>&#125;)</span>;<br></code></pre></td></tr></table></figure><p>to create many documents:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>insert<span class="hljs-constructor">Many([&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>&#125;,&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;C&quot;</span>&#125;])</span><br></code></pre></td></tr></table></figure><p>Note: the input of insertMany() should be a list[]</p><h2 id="update-documents">Update documents</h2><p>To update a documents</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.updateOne</span>(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;B&quot;</span>&#125;,&#123;<br>        <span class="hljs-variable">$set</span>:&#123;<br>            <span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;123456&quot;</span><br>        &#125;<br>    &#125;<br>)<br></code></pre></td></tr></table></figure><p>Where:</p><ul><li>the first parameter eplicts the documents to update</li><li>the second parameter explicts the operation to conduct</li></ul><p>Notes:This command only applies to the first document that meet the search condition(the first pararmeter)</p><p>to update many documents:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.updateMany</span>(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;123456&quot;</span>&#125;,&#123;<br>        <span class="hljs-variable">$set</span>:&#123;<br>            <span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;654321&quot;</span><br>        &#125;<br>    &#125;<br>)<br></code></pre></td></tr></table></figure><h2 id="read-data">Read data</h2><p>To read(and modify) data:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment">-- find all documents in the collection</span><br>db.C1.find()<br><br><span class="hljs-comment">--find particular documents </span><br>db.C1.find(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>,<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;654321&quot;</span>&#125;) <br><br><span class="hljs-comment">-- find the first documents that fits the condition</span><br>db.C1.findOne(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;654321&quot;</span>&#125;)<br><br><span class="hljs-comment">-- find and delete the first documenttaht fits the condition</span><br>db.C1.findOneAndDelete(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;D&quot;</span>&#125;)<br><br><span class="hljs-comment">-- find and replace the first documenttaht fits the condition</span><br><span class="hljs-comment">-- the second parameter gives a whole documents(like the format in insert)</span><br>db.C1.findOneAndReplace(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>&#125;,&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>,<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;23456&quot;</span>&#125;)<br><br><span class="hljs-comment">-- find and update</span><br><span class="hljs-comment">-- the second parameter gives a the operation to apply on the  documents(like the format in update)</span><br>db.C1.findOneAndUpdate(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>&#125;,&#123;<br>$<span class="hljs-keyword">set</span>:&#123;<br><span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;12345&quot;</span><br>&#125;<br>&#125;<br>   )<br>   <br><span class="hljs-comment">-- find and Modify</span><br><span class="hljs-comment">-- pass a json that tell the command to conduct multiple operaions</span><br>db.C1.findAndModify(<br>    &#123;<br>    <span class="hljs-string">&quot;query&quot;</span>: &#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;E&quot;</span>&#125;,<br>    <span class="hljs-string">&quot;update&quot;</span>:&#123;$<span class="hljs-keyword">set</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;A&quot;</span>&#125;&#125;,<br>    &#125;<br>)<br><br></code></pre></td></tr></table></figure><h2 id="delete-documents">Delete documents</h2><p>to delete documents from a collection:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">-- delete the first documetn fits the condition<br>db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>delete<span class="hljs-constructor">One(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;12345&quot;</span>&#125;)</span><br>-- delete all documents fit the condition<br>db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>delete<span class="hljs-constructor">Many(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;12345&quot;</span>&#125;)</span><br></code></pre></td></tr></table></figure><h2 id="query">Query</h2><p>The first parameter is called query condition, by passing a json map, you tell the command constraints of fields.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>find(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;12345&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>&#125;)<br></code></pre></td></tr></table></figure><p>you can also use the $and operand:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">db.C1.<span class="hljs-builtin-name">find</span>(<br>&#123;<br><span class="hljs-variable">$and</span>:[<br>&#123;<span class="hljs-string">&quot;mobile&quot;</span>:<span class="hljs-string">&quot;12345&quot;</span>&#125;,&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;T&quot;</span>&#125;<br>]<br>&#125;<br>)<br></code></pre></td></tr></table></figure><p>Other operand in this formats:</p><ul><li>or</li><li>nor</li></ul><p>to query documents with quantify condition:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">db.C1.<span class="hljs-builtin-name">find</span>(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:&#123;<span class="hljs-variable">$gte</span>:<span class="hljs-string">&quot;20000&quot;</span>&#125;&#125;)<br></code></pre></td></tr></table></figure><p>Other operand in this formats:</p><ul><li>lte: less than ot equal</li><li>gt: greater than</li><li>lt: less than</li><li>eq: equal</li><li>neq: not equal</li></ul><h2 id="select-specific-fields">Select specific fields</h2><p>to select specific fields:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">var</span> pipline = [<br>    &#123;<span class="hljs-variable">$sort</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>:1&#125;&#125;<br>]<br><span class="hljs-keyword">db</span>.C1.aggregate(pipline)<br></code></pre></td></tr></table></figure><p>Notes:</p><ul><li>the first parameter explicts the query condition</li><li>the second parameter explicts the fields you want or do not want(Projection)</li><li><strong>You can not mix inclusion and exclusion</strong> in the second parameter like {"name":0,"mobile":1}</li><li>**The only field that can be mixed is "_id"** of documents. {"name":1,"_id":0}</li></ul><h2 id="projection">Projection</h2><p>Projection is a mechanism allowing you to select specific fieds, like slice of an array.</p><h2 id="aggregation">Aggregation</h2><p>To perform aggregation on collections:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">var</span> pipline = [<br>    &#123;<span class="hljs-variable">$sort</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>:1&#125;&#125;,<br>    &#123;<span class="hljs-variable">$limit</span>:4&#125;<br>]<br><span class="hljs-keyword">db</span>.C1.aggregate(pipline)<br></code></pre></td></tr></table></figure><p>where pip line is list of operations,</p><ul><li>$count</li><li>$group</li><li>$limit</li><li>$lookup</li><li>$match</li><li>$merge</li><li>$sort</li><li>project</li><li>unwind</li><li>unset</li></ul><h2 id="limit-and-skip">Limit and skip</h2><p>Limit the results returned by:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.find</span>()<span class="hljs-selector-class">.limit</span>(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>showing the first there results</p><p>Skip the first 2 results and show the rest:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.find</span>()<span class="hljs-selector-class">.skip</span>(<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h2 id="sort">Sort</h2><p>to sort results:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.find</span>()<span class="hljs-selector-class">.sort</span>(&#123;<span class="hljs-string">&quot;name&quot;</span>:-<span class="hljs-number">1</span>&#125;)<br></code></pre></td></tr></table></figure><p>where the json map in sort() specify the sorting depending on which fields. 1 for ascending and -1 for descending. If you pass multiple fields, it sort the next fields in the groups of previous fields.</p><h2 id="create-and-drop-index">Create and Drop index</h2><p>Create indexes:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>create<span class="hljs-constructor">Index(&#123;<span class="hljs-string">&quot;name&quot;</span>:1&#125;)</span><br>db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>create<span class="hljs-constructor">Indexes([&#123;<span class="hljs-string">&quot;name&quot;</span>:1&#125;,&#123;<span class="hljs-string">&quot;mobile&quot;</span>:1&#125;])</span><br></code></pre></td></tr></table></figure><p>Drop index:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>drop<span class="hljs-constructor">Index(&#123;<span class="hljs-string">&quot;mobile&quot;</span>:1&#125;)</span><br><br>-- drop all indexes except _id<br>db.<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">C1</span>.</span></span>drop<span class="hljs-constructor">Indexes()</span><br></code></pre></td></tr></table></figure><p>Group by:</p><p>Group by operand:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.C1</span><span class="hljs-selector-class">.aggregate</span>(<br>    &#123;<br>        <span class="hljs-variable">$group</span>:&#123;<br>            _id:<span class="hljs-string">&quot;$name&quot;</span>,<br>            <span class="hljs-string">&quot;count&quot;</span>:&#123;<span class="hljs-variable">$sum</span>:<span class="hljs-number">1</span>&#125;<br>        &#125;<br>    &#125;<br>)<br></code></pre></td></tr></table></figure><p>Where:</p><ul><li>_id is an essential arguments, it explain group by which field</li><li>put a $ before the field to group by, it's necessary</li><li>if you want to group by multiple levels, use _id:["$name","$mobile"]</li><li>the "count" is an alias defined by user</li><li>{$sum:1} = count(*)</li><li>{$sum:"$field"} = sum(field)</li><li>other operans includes: $avg, $min, $max</li><li>$push: push all values of the given field in the group into one array</li><li>$addToSet: same as $push, but return a unique set</li><li>$first, $last: return the first/last value</li><li>if _id:null, then return all documents in one group</li></ul><h2 id="back-up-restore">Back up &amp; Restore</h2><p>to back up all databases</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">-- dump the current database<br>mongodump<br></code></pre></td></tr></table></figure><p>To restore all databases</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mongorestore<br></code></pre></td></tr></table></figure><h2 id="transaction">Transaction</h2><p>For transation realted content in MongoDB, please refer to <a href="https://zhuanlan.zhihu.com/p/71679945">this link</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NoSQL</tag>
      
      <tag>MongoDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
